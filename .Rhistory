abline(h = c(8, 16, 32, 48, 64, 128), col = "grey80")
abline(a = 0, b = 4, col = "grey90", lwd = 4)
lines(sizes - 40, type = "s")
plot(0:50, sizes - 40, xlab = "Length",
ylab = "Bytes excluding overhead", type = "n")
abline(h = 0, col = "grey80")
abline(h = c(8, 16, 32, 48, 64, 128), col = "grey80")
abline(a = 0, b = 8, col = "grey90", lwd = 4)
lines(sizes - 40, type = "s")
x <- numeric(1e6)
object_size(x)
y <- list(x, x, x)
object_size(y)
sizes <- sapply(0:50, function(n) object_size(vector("logical", n)))
plot(0:50, sizes, xlab = "Length", ylab = "Size (bytes)",
type = "s")
plot(0:50, sizes - 40, xlab = "Length",
ylab = "Bytes excluding overhead", type = "n")
abline(h = 0, col = "grey80")
abline(h = c(8, 16, 32, 48, 64, 128), col = "grey80")
abline(a = 0, b = 4, col = "grey90", lwd = 4)
lines(sizes - 40, type = "s")
x <- logical(1e6)
object_size(x)
y <- list(x, x, x)
object_size(y)
sizes <- sapply(0:50, function(n) object_size(vector("complex", n)))
plot(0:50, sizes, xlab = "Length", ylab = "Size (bytes)",
type = "s")
plot(0:50, sizes - 40, xlab = "Length",
ylab = "Bytes excluding overhead", type = "n")
abline(h = 0, col = "grey80")
abline(h = c(8, 16, 32, 48, 64, 128), col = "grey80")
abline(a = 0, b = 4, col = "grey90", lwd = 4)
lines(sizes - 40, type = "s")
sizes <- sapply(0:50, function(n) object_size(vector("complex", n)))
plot(0:50, sizes, xlab = "Length", ylab = "Size (bytes)",
type = "s")
plot(0:50, sizes - 40, xlab = "Length",
ylab = "Bytes excluding overhead", type = "n")
abline(h = 0, col = "grey80")
abline(h = c(8, 16, 32, 48, 64, 128), col = "grey80")
abline(a = 0, b = 16, col = "grey90", lwd = 4)
lines(sizes - 40, type = "s")
x <- complex(1e6)
object_size(x)
y <- list(x, x, x)
object_size(y)
df <- data.frame(int1 = integer(1000000),
num1 = numeric(1000000),
num2 = numeric(1000000))
object_size(df)
as.integer(object_size(df))
object_size(data.frame())
object_size(data.frame(int1 = integer(),
num1 = numeric(),
num2 = numeric()))
object_size(data.frame(int1 = integer()))
object_size(data.frame(int1 = integer(),
num1 = numeric()))
object_size(data.frame())
df <- data.frame(int1 = integer(1000000),
num1 = numeric(1000000),
num2 = numeric(1000000))
as.integer(object_size(df))
vec <- lapply(0:50, function(i) c("ba", rep("na", i)))
vec
str <- lapply(vec, paste0, collapse = "")
str
object_size(vec)
object_size(str)
object_size(vec, str)
object_size(rep(letters[1:20], 1000))
object_size(factor(rep(letters[1:20], 1000)))
object_size(1:20000)
object_size(letters[1:20])
object_size(letters[1:20])
object_size(factor(letters[1:20]))
object_size(vector("list", 0))
object_size(vector("list", 1))
object_size(c(1:5))
object_size(1:5)
object_size(list(1:5))
object_size(list(1:5L))
object_size(c(1:5L))
object_size(1:5L)
object_size(vector(0))
object_size(1:5)
object_size(list(1:5))
object_size(integer(0))
object_size(list(0))
object_size(list(1))
object_size(list(1:2))
object_size(list(1:3))
object_size(list(1))
object_size(list(1:2))
object_size(list(1:3))
object_size(list(1:4))
object_size(list(1:5))
object_size(1)
object_size(integer(0))
object_size(1)
object_size(1:2)
object_size(1:3)
object_size(1:4)
object_size(1:5)
object_size(list(0))
object_size(1) - 40
object_size(1:2) - 40
object_size(1:3) - 40
object_size(1:4) - 40
object_size(1:5) - 40
object_size(list(0))
object_size(list(1)) - 40
object_size(list(1:2)) - 40
object_size(list(1:3)) - 40
object_size(list(1:4)) - 40
object_size(list(1:5)) - 40
object_size(1:5)
object_size(list(1:5))
object_size(list(0))
object_size(list(1)) - 40
object_size(list(1:2)) - 40
object_size(list(1:3)) - 40
list(1:5)
object_size(list(NULL))
object_size(list(1)) - 48
object_size(list(1:2)) - 48
object_size(list(1:3)) - 48
object_size(list(1:4)) - 48
object_size(list(1:5)) - 48
list(NULL)
object_size(list(NULL))
object_size(list())
object_size(integer())
object_size(list())
object_size(list())
object_size(list(1)) - 40
object_size(list(1:2)) - 40
object_size(list(1:3)) - 40
object_size(list(1:4)) - 40
object_size(list(1:5)) - 40
object_size(1:5)
object_size(list(1)) - 80
object_size(list(1:2)) - 80
object_size(list(1:3)) - 80
object_size(list(1:4)) - 80
object_size(list(1:5)) - 80
object_size(1:5)
object_size(list(1:5))
object_size(list(1)) - 72
object_size(list(1:2)) - 80
object_size(list(1:3)) - 80
object_size(list(1:4)) - 80
object_size(list(1:5)) - 80
object_size(1:5)
object_size(list(1:5))
object_size(list(integer()))
object_size(list(1)) - 88
object_size(list(1:2)) - 88
object_size(list(1:3)) - 88
object_size(list(1:4)) - 88
object_size(list(1:5)) - 88
120-88
32*5
object_size(1:5) - 40
list(integer())
list(integer())
object_size(list(integer()))
object_size(integer())
object_size(1:5)
object_size(1:20)
object_size(letters[1:20])
letters[1:20]
object_size(factor(letters[1:20]))
20*4
object_size(letters[1:20])
object_size(1:20)
object_size(character())
object_size(letters[1:20])
object_size("a")
object_size("a", "b")
object_size(c("a", "b"))
object_size(c("a", "b", "c"))
object_size(c("a", "b", "c", "d"))
object_size(letters[1:5])
letters[1:5]
letters[1:4]
object_size(letters[1:4])
96*4
96*4 - 40
object_size(c("a"))
object_size(c("a", "b"))
152-96
152-96 -40
object_size(c("a", "b", "c"))
-40
216-40
176/8
object_size(c("a", "b", "c"))
object_size(c("a", "b", "c", "d"))
176+48
object_size(c("a", "b", "c", "d", "e"))
object_size(letters[1:5])
object_size(letters[1:20])
object_size(c("a"))
object_size(c("a", "b"))
152-96
object_size(c("a", "b", "c"))
216-152
object_size(c("a", "b", "c", "d"))
264-216
object_size(c("a", "b", "c", "d"))
object_size(c("a", "b", "c", "d", "e"))
328-264
object_size(rep(letters[1:20], 1000))
object_size(factor(rep(letters[1:20], 1000)))
object_size(character())
object_size(facter(character()))
object_size(factor(character()))
object_size(factor(character("a")))
object_size(factor("a"))
object_size(factor(c("a", "b")))
object_size(factor(c("a", "b", "c")))
520-464
592-520
object_size(character())
object_size(factor(character()))
object_size(c("a"))
object_size(factor("a"))
mem_used()
gcinfo(TRUE)
f2 <- function() {
x <- 1:1e6
a ~ b
}
y <- f2()
mem_change(y)
mem_change(y <- f2())
f2 <- function() {
x <- 1:1e6
a ~ b
}
mem_change(y <- f2())
object_size(y)
object.size(y)
object_size(y)
object.size(y)
y
f3 <- function() {
x <- 1:1e6
function() 10
}
f3
z
f3 <- function() {
x <- 1:1e6
function() 10
}
z <- f3()
z
library(xlsx)
read.xlsx
rm
x <- 1:10
c(address(x), refs(x))
y <- x
c(address(y), refs(y))
c(address(y), refs(x))
x <- data.frame(matrix(runif(100 * 1e4), ncol = 100))
medians <- vapply(x, median, numeric(1))
for (i in 1:5) {
x[, i] <- x[, i] - medians[i]
print(c(address[x], refs(x)))
}
# 18.4.1
x <- data.frame(matrix(runif(100 * 1e4), ncol = 100))
medians <- vapply(x, median, numeric(1))
for (i in 1:5) {
x[, i] <- x[, i] - medians[i]
print(c(address(x), refs(x)))
}
y <- as.list(x)
for (i in 1:5) {
y[[i]] <- y[[i]] - medians[i]
print(c(address(y), refs(y)))
}
is.primitive(as.list)
install.packages("stringdist")
Rcpp::sourceCpp('Documents/R/tutorial/Rcpp/meanC.cpp')
?Position
?pmin
all
?all
install.packages(c("devtools", "purrr"))
evalCpp('NA_INTEGER + 1')
library(Rcpp)
evalCpp('NA_INTEGER + 1')
evalCpp('NAN')
evalCpp('NAN && TRUE')
1.5^2
0.5^2
Rcpp::sourceCpp('Documents/R/tutorial/Rcpp/minC.cpp')
minC(c(2,5,3,NA), narm = TRUE)
minC(c(2,5,3,NA), narm = FALSE)
min
minC(c(2,5,3,6), narm = FALSE)
minC(c(2,5,3,NA), narm = FALSE)
minC(c(2,5,3,NA), narm = TRUE)
minC(c(2, 5, 3, NA), narm = TRUE)
maxC(c(2, 5, 3, NA), narm = TRUE)
Rcpp::sourceCpp('Documents/R/tutorial/Rcpp/minC.cpp')
minC(c(2, 5, 3, NA), narm = TRUE)
Rcpp::sourceCpp('Documents/R/tutorial/Rcpp/minC.cpp')
Rcpp::sourceCpp('Documents/R/tutorial/Rcpp/minC.cpp')
minC(c(2, 5, 3, NA), narm = TRUE)
Rcpp::sourceCpp('Documents/R/tutorial/Rcpp/minC.cpp')
Rcpp::sourceCpp('Documents/R/tutorial/Rcpp/minC.cpp')
minC(c(2, 5, 3, NA), narm = TRUE)
Rcpp::sourceCpp('Documents/R/tutorial/Rcpp/minC.cpp')
minC(c(2, 5, 3, NA), narm = TRUE)
Rcpp::sourceCpp('Documents/R/tutorial/Rcpp/minC.cpp')
minC(c(2, 5, 3, NA), narm = TRUE)
Rcpp::sourceCpp('Documents/R/tutorial/Rcpp/minC.cpp')
minC(c(2, 5, 3, NA), narm = TRUE)
Rcpp::sourceCpp('Documents/R/tutorial/Rcpp/minC.cpp')
minC(c(2, 5, 3, NA), narm = TRUE)
Rcpp::sourceCpp('Documents/R/tutorial/Rcpp/minC.cpp')
minC(c(2, 5, 3, NA), narm = TRUE)
Rcpp::sourceCpp('Documents/R/tutorial/Rcpp/minC.cpp')
minC(c(2, 5, 3, NA), narm = TRUE)
Rcpp::sourceCpp('Documents/R/tutorial/Rcpp/minC.cpp')
minC(c(2, 5, 3, NA), narm = TRUE)
Rcpp::sourceCpp('Documents/R/tutorial/Rcpp/minC.cpp')
minC(c(2, 5, 3, NA), narm = TRUE)
Rcpp::sourceCpp('Documents/R/tutorial/Rcpp/minC.cpp')
minC(c(2, 5, 3, NA), narm = TRUE)
Rcpp::sourceCpp('Documents/R/tutorial/Rcpp/minC.cpp')
minC(c(2, 5, 3, NA), narm = TRUE)
minC(c(2, 5, 3, NA), narm = FALSE)
maxC(c(2, 5, 3, NA), narm = FALSE)
maxC(c(2, 5, 3, NA), narm = TRUE)
Rcpp::sourceCpp('Documents/R/tutorial/Rcpp/minC.cpp')
maxC(c(2, 5, 3, NA), narm = TRUE)
maxC(c(2, 5, 3, NA), narm = FALSE)
rangeC(c(2, 5, 3, NA), narm = FALSE)
rangeC(c(2, 5, 3, NA), narm = TRUE)
Rcpp::sourceCpp('Documents/R/tutorial/Rcpp/minC.cpp')
rangeC(c(2, 5, 3, NA), narm = TRUE)
rangeC(c(2, 5, 3, NA), narm = FALSE)
Rcpp::sourceCpp('Documents/R/tutorial/Rcpp/minC.cpp')
range1(c(2, 5, 3, NA), narm = FALSE)
rangeC1(c(2, 5, 3, NA), narm = FALSE)
rangeC1(c(2, 5, 3, NA), narm = TRUE)
Rcpp::sourceCpp('Documents/R/tutorial/Rcpp/minC.cpp')
meanC(c(2, 5, 3, NA), narm = TRUE)
meanC(c(2, 5, 3, NA), narm = FALSE)
meanC(c(2, 5, 3, NA), narm = TRUE)
Rcpp::sourceCpp('Documents/R/tutorial/Rcpp/minC.cpp')
meanC(c(2, 5, 3, NA), narm = TRUE)
meanC(c(2, 5, 3, NA), narm = FALSE)
cumsumC(c(2, 5, 3, NA), narm = FALSE)
cumsumC(c(2, 5, 3, NA))
cumsumC(c(2, 5, 3, NA, 4))
difflagC(c(2, 5, 3, NA, 4), lag = 1)
table
// [[Rcpp::plugins(cpp11)]]
#include <Rcpp.h>
#include <unordered_set>
using namespace Rcpp;
// [[Rcpp::export]]
NumericVector uniqueC(NumericVector x) {
std::unordered_set<int> seen;
int n = x.size();
LogicalVector dup(n);
std::vector<double> out;
for (int i = 0; i < n; ++i) {
dup[i] = !seen.insert(x[i]).second;
if (!dup[i]) {
out.push_back(x[i]);
}
}
return wrap(out);
}
Rcpp::sourceCpp('Documents/R/tutorial/Rcpp/uniqueC.cpp')
x <- c(2, 3, 5, 3, 6, 3, NA)
y <- uniqueC(x)
y
Rcpp::sourceCpp('Documents/R/tutorial/Rcpp/uniqueC.cpp')
y <- uniqueC(x)
y
Rcpp::sourceCpp('Documents/R/tutorial/Rcpp/uniqueC.cpp')
Rcpp::sourceCpp('Documents/R/tutorial/Rcpp/uniqueC.cpp')
y <- uniqueC(x)
y
Rcpp::sourceCpp('Documents/R/tutorial/Rcpp/uniqueC.cpp')
minC(x)
minC(c(2, 3, 5))
Rcpp::sourceCpp('Documents/R/tutorial/Rcpp/uniqueC.cpp')
minC(c(2, 3, 5))
minC(x)
Rcpp::sourceCpp('Documents/R/tutorial/Rcpp/uniqueC.cpp')
which_minC(x)
which_minC(c(3, 2, 5))
Rcpp::sourceCpp('Documents/R/tutorial/Rcpp/minC.cpp')
View(allC)
View(difflagC)
5150/27.5
rinternals <- file.path(R.home("include"), "RInternals.h")
rinternals <- file.path(R.home("include"), "RInternals.h")
file.show(rinternals)
install.packages(c("sjmisc", "sjPlot", "WGCNA"))
install.packages("magick")
install.packages("knitr")
install.packages(c("HistData", "httr", "rmapshaper", "tidyr"))
install.packages("Matrix", lib="/usr/local/Cellar/r/3.4.1_1/R.framework/Versions/3.4/Resources/library")
cite()
citation()
paste("a", "b")
install.packages(c("RcppArmadillo", "servr"))
library(devtools)
install_github('hadley/scales')
getwd()
install.packages(c("boot", "Matrix", "mgcv"), lib="/usr/local/Cellar/r/3.4.1_2/lib/R/library")
install.packages(c("bookdown", "geojsonio", "httr", "RcppArmadillo", "sjmisc"))
3.5*13
install.packages(c("fastcluster", "sjstats"))
110*0.001
0.01*365
0.1*365
install.packages(c("blogdown", "ggeffects", "magick", "tibble"))
Rcpp:::CxxFlags()
install.packages(c("BH", "scales"))
install.packages("units")
install.packages(c("commonmark", "geojsonio", "protolite", "tidyr"))
install.packages("magick")
1400*65
1400*70
install.packages(c("ggeffects", "pomp", "prettymapr", "showtext", "snakecase"))
citation
citation()
install.packages(c("jqr", "lme4", "Rcpp", "rgdal"))
install.packages("jqr")
install.packages(c("doParallel", "dplyr", "sjstats"))
install.packages("ggsci")
install.packages("mgcv", lib="/usr/local/Cellar/r/3.4.2/lib/R/library")
install.packages(c("curl", "magick", "quantmod", "rgdal"))
install.packages("rJava")
install.packages("rJava")
install.packages("data.table")
?setMethod
?setClass
?setMethod
?writeLines
library(Rcpp)
?IntegerVector
1628、130
1628/130
install.packages("purrr")
install.packages("vdiffr")
593288/3*4
install.packages(c("rex", "sjPlot"))
6.6184*5813.82
6.6184*5813.82-37676.51
6.6202*5813.82-37676.51
6.6202*5813.82
6.6204*5813.82
6.9*5813.82
10000*5.46/100
40000*5.46/100
40000*4.7/100
400000*5.46/100
install.packages(c("checkmate", "geojson"))
13484.16*1.4832
89.35/0.15/0.01
install.packages(c("bbmle", "pryr", "rgdal", "rgeos", "sf"))
9/11
install.packages(c("blogdown", "lsmeans", "robustbase", "withr"))
install.packages(c("hunspell", "lubridate", "magick", "openssl"))
install.packages(c("cdcfluview", "tidyverse"))
install.packages("rgdal")
install.packages("Rcpp")
install.packages(c("htmlTable", "magick", "yaml"))
install.packages(c("rEDM", "Rttf2pt1"))
rm(list = ls())
setwd("~/Documents/github/blog.tonytsai.name/")
blogdown::new_post(title = "Detecting Non-breaking Space in R", date = "2017-12-04", rmd = TRUE)
rm(list = ls())
setwd("~/Documents/github/blog.tonytsai.name/")
blogdown::new_post(title = "Detecting Non-breaking Space in R", date = "2017-12-04")
# blogdown::build_site(method = "html_encoded")
# blogdown::build_site()
blogdown::serve_site()
7.2*7.8
rm(list = ls())
setwd("~/Documents/github/blog.tonytsai.name/")
blogdown::new_post(title = "Detecting Non-breaking Space in R", date = "2017-12-04", ext = ".Rmd")
# blogdown::build_site(method = "html_encoded")
# blogdown::build_site()
blogdown::serve_site()
# blogdown::build_site(method = "html_encoded")
# blogdown::build_site()
blogdown::serve_site()
# blogdown::build_site(method = "html_encoded")
# blogdown::build_site()
blogdown::serve_site()
# blogdown::build_site(method = "html_encoded")
# blogdown::build_site()
blogdown::serve_site()
# blogdown::build_site(method = "html_encoded")
# blogdown::build_site()
blogdown::serve_site()
